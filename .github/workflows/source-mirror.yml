name: Source Mirror from Releases (manual)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to mirror (e.g., v2025.08.20-02)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq p7zip-full

      - name: Prepare work dirs
        run: |
          rm -rf _work
          mkdir -p _work/assets _work/extracted _work/stage

      - name: Resolve tag
        id: vars
        run: echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT

      - name: Download assets for tag and extract sources
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TAG="${{ steps.vars.outputs.TAG }}"
          API="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/$TAG"
          ASSET_URLS=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$API" | jq -r '.assets[].browser_download_url')
          if [ -z "$ASSET_URLS" ]; then
            echo "No assets found for tag $TAG"; exit 1
          fi
          for url in $ASSET_URLS; do
            name=$(basename "$url")
            echo "Downloading $name"
            curl -L -H "Authorization: Bearer $GH_TOKEN" -o "_work/assets/$name" "$url"

            echo "Extracting $name"
            EXTRACT_DIR="_work/extracted/$name"
            mkdir -p "$EXTRACT_DIR"
            7z x -y "_work/assets/$name" -o"$EXTRACT_DIR" >/dev/null

            echo "Collecting text/project files"
            # 逐个文件拣选并复制到 stage，保留相对目录结构；兼容中文与空格路径
            while IFS= read -r -d '' f; do
              rel="${f#"$EXTRACT_DIR/"}"                  # 变成相对路径
              dest="_work/stage/$TAG/$rel"
              mkdir -p "$(dirname "$dest")"
              cp -p "$f" "$dest"
            done < <(find "$EXTRACT_DIR" -type f \
                        \( -iname "*.c" -o -iname "*.h" -o -iname "*.ioc" -o -iname "*.ld" -o -iname "*.s" -o -iname "*.S" -o -iname "*.md" -o -iname "*.txt" -o -iname "*.cfg" -o -iname "*.ini" -o -iname "*.csv" \) \
                        -size -5M -print0)

            rm -rf "$EXTRACT_DIR" "_work/assets/$name"
          done

      - name: Switch/create mirror branch
        run: |
          git fetch origin source-mirror:source-mirror || true
          git switch source-mirror || git switch -c source-mirror

      - name: Sync to releases/<tag>
        run: |
          TAG="${{ steps.vars.outputs.TAG }}"
          mkdir -p "releases/$TAG"
          rsync -a --delete "_work/stage/$TAG"/ "releases/$TAG"/

      - name: Generate indexes and latest.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.vars.outputs.TAG }}"
          # 每个 tag 的文件清单
          find "releases/$TAG" -type f -printf '%P\n' | \
            jq -R -s '{tag:"'"$TAG"'",generated_at:now|todate,files:(split("\n")|map(select(length>0)))}' \
            > "releases/$TAG/index.json"
          # 全部 tag 索引
          find releases -mindepth 1 -maxdepth 1 -type d -printf '%f\n' | sort -r | \
            jq -R -s '{tags:(split("\n")|map(select(length>0)))}' > mirror_index.json
          # latest.json 指向本次 tag
          API="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/$TAG"
          ASSETS_JSON=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$API" | jq -c '[.assets[] | {name:.name, url:.browser_download_url}]')
          MIRROR_ROOT="https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/source-mirror/releases/${TAG}/"
          jq -n --arg ver "$TAG" --arg root "$MIRROR_ROOT" --arg now "$(date -u +%FT%TZ)" \
                --argjson assets "$ASSETS_JSON" \
                '{version:$ver,updated_at:$now,mirror_root:$root,assets:$assets}' > latest.json

      - name: Commit and push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "mirror: ${{ steps.vars.outputs.TAG }}" || echo "Nothing to commit"
          git push origin source-mirror
